import pandas as pd
import seaborn as sns
df = pd.read_csv("Admission_Predict.csv")
df.shape
(400, 9)
df.columns
Index(['Serial No.', 'GRE Score', 'TOEFL Score', 'University Rating', 'SOP',
'LOR ', 'CGPA', 'Research', 'Chance of Admit '],
dtype='object')
from sklearn.preprocessing import Binarizer
bi = Binarizer(threshold=0.75)
df['Chance of Admit '] = bi.fit_transform(df[['Chance of Admit ']])


df.head()

#input variable
x= df.drop('Chance of Admit ',axis=1)
y= df['Chance of Admit ']


x

y.value_counts()

#Cross Validation
from sklearn.model_selection import train_test_split

x_train ,x_test ,y_train ,y_test = train_test_split(x,y,random_state=0, test_size=0.25)
x_train.shape
(300, 8)
x_test.shape
(100, 8)


x_test

from sklearn.tree import DecisionTreeClassifier
classifier = DecisionTreeClassifier(random_state=0)

â–¾ DecisionTreeClassifier
DecisionTreeClassifier(random_state=0)
classifier.fit(x_train,y_train)

y_pred = classifier.predict(x_test)
result = pd.DataFrame({'actual':y_test,
'predicted':y_pred
})
result


from sklearn.metrics import ConfusionMatrixDisplay,accuracy_score
from sklearn.metrics import classification_report

<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x784171864f10>
ConfusionMatrixDisplay.from_predictions(y_test,y_pred)

accuracy_score(y_test,y_pred)
0.9
print(classification_report(y_test,y_pred))
